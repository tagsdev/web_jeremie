apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.prod.yml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: web
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.prod.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: web
    spec:
      containers:
        - args:
            - gunicorn
            - mysite.wsgi:application
            - --bind
            - 0.0.0.0:8000
          env:
            - name: DATABASE
              valueFrom:
                configMapKeyRef:
                  key: DATABASE
                  name: env-prod
            - name: DEBUG
              valueFrom:
                configMapKeyRef:
                  key: DEBUG
                  name: env-prod
            - name: DJANGO_ALLOWED_HOSTS
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_ALLOWED_HOSTS
                  name: env-prod
            - name: SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  key: SECRET_KEY
                  name: env-prod
            - name: SQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  key: SQL_DATABASE
                  name: env-prod
            - name: SQL_ENGINE
              valueFrom:
                configMapKeyRef:
                  key: SQL_ENGINE
                  name: env-prod
            - name: SQL_HOST
              valueFrom:
                configMapKeyRef:
                  key: SQL_HOST
                  name: env-prod
            - name: SQL_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: SQL_PASSWORD
                  name: env-prod
            - name: SQL_PORT
              valueFrom:
                configMapKeyRef:
                  key: SQL_PORT
                  name: env-prod
            - name: SQL_USER
              valueFrom:
                configMapKeyRef:
                  key: SQL_USER
                  name: env-prod
          image: mcbtaguiad/tagsdev_web:v1.0.7
          name: web
          ports:
            - containerPort: 8000
          resources: {}
          volumeMounts:
            - mountPath: /home/app/web/staticfiles
              name: static-volume
      restartPolicy: Always
      volumes:
        - name: static-volume
          persistentVolumeClaim:
            claimName: static-volume
status: {}
